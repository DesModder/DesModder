# Replacements for GLesmos

*plugin* `glesmos`

## Add a menu option for switching an expression to glesmos rendering mode

*Module* `expressions/expression-menus/fill`

*find* `template`

```js
.template = function () {__template__}
```

*Find_inside* `toggleView` inside `__template__`

```js
$DCGView.createElement($ToggleView.ToggleView
```

*Find_inside* `this` inside `__template__`

```js
var $this = this
```

*Find_inside* `from` inside `__template__`
```js
return $DCGView.createElement(
  'div',
  { class: $DCGView.const('dcg-options-menu-content') },
  $DCGView.createElement(__body1__),
  $DCGView.createElement(__body2__)
)
```

Just add one more child.

*Replace* `from` with
```js
return $DCGView.createElement(
  'div',
  { class: $DCGView.const('dcg-options-menu-content') },
  $DCGView.createElement(__body1__),
  $DCGView.createElement(__body2__),
  $DCGView.createElement(
    $DCGView.Components.If,
    {
      predicate: () => DesModder.controller.canBeGLesmos($this.id),
    },
    () => $DCGView.createElement(
      "div",
      { class: $DCGView.const("dcg-options-menu-section-title dsm-gl-fill-title") },
      () => DesModder.controller.format("GLesmos-label-toggle-glesmos"),
      $DCGView.createElement($ToggleView.ToggleView, {
        ariaLabel: () => DesModder.controller.format("GLesmos-label-toggle-glesmos"),
        toggled: () => window.DesModder?.controller?.isGlesmosMode?.($this.id),
        onChange: (a) => window.DesModder?.controller?.toggleGlesmos?.($this.id),
      })
    )
  )
)
```
