# Replacements for GLesmos

*plugin* `glesmos`

## Add a menu option for switching an expression to glesmos rendering mode

*Module* `expressions/expression-menus/fill`

*find* `template`

```js
.template = function () { __template__ }
```

*Find_inside* `toggleView` inside `__template__`

```js
.createElement($ToggleView.ToggleView
```

*Find_inside* `this` inside `__template__`

```js
var $this = this
```

*Find_inside* `from` inside `__template__`
```js
return $DCGView.createElement(
  'div',
  { class: $DCGView.const('dcg-options-menu-content') },
  __rest__
)
```

Just add one more child.

*Replace* `__rest__` with
```js
__rest__,
$DCGView.createElement(
  $DCGView.Components.If,
  {
    predicate: () => DesModder.controller.canBeGLesmos($this.id),
  },
  () => $DCGView.createElement(
    "div",
    { class: $DCGView.const("dcg-options-menu-section-title dsm-gl-fill-title") },
    () => DesModder.controller.format("GLesmos-label-toggle-glesmos"),
    $DCGView.createElement($ToggleView.ToggleView, {
      ariaLabel: () => DesModder.controller.format("GLesmos-label-toggle-glesmos"),
      toggled: () => window.DesModder?.controller?.isGlesmosMode?.($this.id),
      onChange: (a) => window.DesModder?.controller?.toggleGlesmos?.($this.id),
    })
  )
)
```

## Replace main renderer with glesmos rendering when necessary

*Module* `graphing/graphslayer`

*Find* `drawSketchToCtx`

```js
.drawSketchToCtx = function ($e, $ctx, $transforms, __args__) {__body__}
```

*Find_inside* `if_statement` `__body__`

```js
if ($c || ($c = {}), $t.branches && $t.branches.length) {__consequent__}
```

*Replace* `__consequent__` with

```js
__consequent__;
for (const branch of $e.branches) {
  if (branch.graphMode === "GLesmos") {
    window.DesModder?.controller?.exposedPlugins[
      "GLesmos"
    ]?.drawGlesmosSketchToCtx?.(branch.compiledGL, $ctx, $transforms, $e.id);
  }
}
```

## Hide lines option for GLesmos expressions

*Module* `expressions/expression-menus/expression-options-menu-view`

*Find* `drawSketchToCtx`

```js
.getSections = function () {__body__}
```

*Find_inside* `Expression1` inside `__body__`

```js
$Expression.isHistogram
```

*Replace* `__body__` with

```js
if ($Expression.isInequality(this.model) && DesModder.controller.isGlesmosMode(this.model.id)) {
  return ['fill'];
}
__body__
```
