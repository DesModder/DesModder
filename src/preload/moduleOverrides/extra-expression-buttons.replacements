# Replacements for Extra Expression Buttons

*plugin* `pin-expressions` `folder-tools`

TODO: work this into an API so it doesn't need a ton of injected code.

## Insert extra buttons

Insert before the delete button but after the other buttons.

*Description* `Show buttons like "pin" and "merge folder."`

*Find*
```js
.createElement(
  'span',
  {
    class: () => ({
        'dcg-expression-edit-actions' ____
      }
    ),
    ____
  },
  $DCGView.createElement(____),
  $DCGView.createElement(____),
  $DCGView.createElement(____),
  $DCGView.createElement(____),
  __delete_button__
)
```

*Replace* `delete_button` with
```js
// pin-unpin
$DCGView.createElement(
  $DCGView.Components.If,
  {
    predicate: () => DSM.pinExpressions && this.model().type !== "folder"
  },
  () => $DCGView.Components.IfElse(
    () => DSM.pinExpressions?.isExpressionPinned(this.model().id),
    {
      false: DesModder.createAction(
        "pin-expressions-pin",
        "dsm-pin-button",
        "dsm-icon-bookmark",
        () => DSM.pinExpressions?.pinExpression(this.model().id)
      ),
      true: DesModder.createAction(
        "pin-expressions-unpin",
        "dsm-unpin-button dcg-selected",
        "dsm-icon-bookmark",
        () => DSM.pinExpressions?.unpinExpression(this.model().id)
      )
    }
  )
),
// enclose note
$DCGView.createElement(
  $DCGView.Components.If,
  {
    predicate: () => DSM.folderTools && this.model().type === "text"
  },
  DesModder.createAction(
    "folder-tools-enclose",
    "dsm-note-enclose-button",
    "dsm-icon-folder-plus",
    () => DSM.folderTools?.noteEnclose(this.model().index)
  )
),
// dump folder
$DCGView.createElement(
  $DCGView.Components.If,
  {
    predicate: () => DSM.folderTools && this.model().type === "folder"
      && window.Calc.controller.getItemModelByIndex(this.model().index + 1)?.folderId === this.model().id
  },
  DesModder.createAction(
    "folder-tools-dump",
    "dsm-folder-dump-button",
    "dsm-icon-folder-minus",
    () => DSM.folderTools?.folderDump(this.model().index)
  )
),
// merge folder
$DCGView.createElement(
  $DCGView.Components.If,
  {
    predicate: () => DSM.folderTools && this.model().type === "folder"
  },
  DesModder.createAction(
    "folder-tools-merge",
    "dsm-folder-merge-button",
    "dsm-icon-folder-plus",
    () => DSM.folderTools?.folderMerge(this.model().index)
  )
),
__delete_button__
```

## Allow pin/unpin and dump/merge without exiting ELM

*Description* `Stay in "Edit List" mode after unpinning an expression or dumping a folder`

*Find* => `outer`
```js
if (this.controller.isInEditListMode() && !$uee($e)) {
    this.exitEditListMode();
    return
}
```

*Find* inside `outer` => `from`
```js
this.exitEditListMode()
```

*Replace* `from` with
```js
(event.target.closest(".dsm-stay-edit-list-mode") || this.exitEditListMode())
```
