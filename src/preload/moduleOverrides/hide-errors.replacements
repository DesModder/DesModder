# Replacements for Hide Errors

*plugin* `hide-errors`

## Prevent enter/shift-enter from creating sliders

*Module* `graphing-calc/actions/keyboard`

*Find* `from`
```js
if ($List.getMissingVariablesForItem($l).length && $e.areSlidersEnabled())
  return $e.createSlidersForItem(
```

*Replace* `from` with
```js
if (
  $List.getMissingVariablesForItem($l).length &&
  $e.areSlidersEnabled() &&
  !window.DesModder.controller.isErrorHidden($l.id)
)
  return $e.createSlidersForItem(
```

## Wrap error triangle with div for onTap and opacity control

*Module* `expressions/expression-icon-view`

Wrap the error message tooltipped-error with a div, using `onTap` to trigger hiding/showing the error (but only when shift is held).

*find* `template`

```js
.template = function () {__template__}
```

*Find_inside* `this` inside `__template__`
```js
$this.bindFn($this.getIconMode)
```

*Find_inside* `from` inside `__template__`
```js
error: function () {
  return $DCGView.createElement($T.TooltippedError, { <body> })
}
```

*Replace* `from` with
```js
error: () => $DCGView.createElement(
  "div",
  {
    onTap: evt => (
      evt.shiftKey &&
      window.DesModder.controller.toggleErrorHidden($this.model.id)
    ),
    style: () => (
      window.DesModder.controller.isErrorHidden($this.model.id)
        ? "opacity: 0.5"
        : ""
    )
  },
  $DCGView.createElement($T.TooltippedError, { <body> })
)
```
