type Replacement = [RegExp, string];

export const symbolReplacements: Replacement[] = [
  [/ϕ/g, "φ"],
  [/\*\*/g, "^"],
  [/(?<![A-Za-zΑ-ω])sqrt/g, "√"],
  [/(?<![A-Za-zΑ-ω])cbrt/g, "∛"],
  [/(?<![A-Za-zΑ-ω])infinity|infty/g, "∞"],
  [/(?<![A-Za-zΑ-ω])mod(ulus|ulo)/g, "mod"],
  [/(?<![A-Za-zΑ-ω])mod(?!\s*\()/g, "%"],
  [/(?<![A-Za-zΑ-ω])pm/g, "±"],
  [/×|∙/g, "*"],
  [/==/g, "="],
  [/>=/g, "≥"],
  [/<=/g, "≤"],
  [/!=/g, "≠"],
  [/->/g, "→"],
];

export const finalSymbolReplacements: Replacement[] = [
  [/√\\left\[([^\]]*)\\right\]/g, "\\sqrt[$1]"],
  [/√/g, "\\sqrt"],
  [/∛/g, "\\sqrt[3]"],
  [/\*/g, "\\cdot "],
  [/(?<=\d) (?=\d)/g, " \\cdot "],
];

export const functionReplacements: Replacement[] = [
  [/(?<![A-Za-zΑ-ω])arcsinh/g, "Ⓐ"], // https://qaz.wtf/u/convert.cgi?
  [/(?<![A-Za-zΑ-ω])arccosh/g, "Ⓑ"],
  [/(?<![A-Za-zΑ-ω])arctanh/g, "Ⓒ"],
  [/(?<![A-Za-zΑ-ω])arccsch/g, "Ⓓ"],
  [/(?<![A-Za-zΑ-ω])arcsech/g, "Ⓔ"],
  [/(?<![A-Za-zΑ-ω])arccoth/g, "Ⓕ"],
  [/(?<![A-Za-zΑ-ω])sinh/g, "Ⓖ"],
  [/(?<![A-Za-zΑ-ω])cosh/g, "Ⓗ"],
  [/(?<![A-Za-zΑ-ω])tanh/g, "Ⓘ"],
  [/(?<![A-Za-zΑ-ω])csch/g, "Ⓙ"],
  [/(?<![A-Za-zΑ-ω])sech/g, "Ⓚ"],
  [/(?<![A-Za-zΑ-ω])coth/g, "Ⓛ"],
  [/(?<![A-Za-zΑ-ω])arcsin/g, "Ⓜ"],
  [/(?<![A-Za-zΑ-ω])arccos/g, "Ⓝ"],
  [/(?<![A-Za-zΑ-ω])arctan/g, "Ⓞ"],
  [/(?<![A-Za-zΑ-ω])arccsc/g, "Ⓟ"],
  [/(?<![A-Za-zΑ-ω])arcsec/g, "Ⓠ"],
  [/(?<![A-Za-zΑ-ω])arccot/g, "Ⓡ"],
  [/(?<![A-Za-zΑ-ω])sin/g, "Ⓢ"],
  [/(?<![A-Za-zΑ-ω])cos/g, "Ⓣ"],
  [/(?<![A-Za-zΑ-ω])tan/g, "Ⓤ"],
  [/(?<![A-Za-zΑ-ω])csc/g, "Ⓥ"],
  [/(?<![A-Za-zΑ-ω])sec/g, "Ⓦ"],
  [/(?<![A-Za-zΑ-ω])cot/g, "Ⓧ"],
  [/(?<![A-Za-zΑ-ω])log|ln/g, "Ⓩ"],
  [/int(egral|)(?!\S)/g, "Ａ"],
  [/int(egral|)(?=_)/g, "Ｂ"],
  [/sum(?=_)/g, "Ｃ"],
  [/prod(uct|)(?=_)/g, "Ｄ"],
];

export const functionFinalReplacements: Replacement[] = [
  [/Ⓐ/g, "arcsinh"],
  [/Ⓑ/g, "arccosh"],
  [/Ⓒ/g, "arctanh"],
  [/Ⓓ/g, "arccsch"],
  [/Ⓔ/g, "arcsech"],
  [/Ⓕ/g, "arccoth"],
  [/Ⓖ/g, "sinh"],
  [/Ⓗ/g, "cosh"],
  [/Ⓘ/g, "tanh"],
  [/Ⓙ/g, "csch"],
  [/Ⓚ/g, "sech"],
  [/Ⓛ/g, "coth"],
  [/Ⓜ/g, "arcsin"],
  [/Ⓝ/g, "arccos"],
  [/Ⓞ/g, "arctan"],
  [/Ⓟ/g, "arccsc"],
  [/Ⓠ/g, "arcsec"],
  [/Ⓡ/g, "arccot"],
  [/Ⓢ/g, "sin"],
  [/Ⓣ/g, "cos"],
  [/Ⓤ/g, "tan"],
  [/Ⓥ/g, "csc"],
  [/Ⓦ/g, "sec"],
  [/Ⓧ/g, "cot"],
  [/Ⓩ(?!_)/g, "ln"],
  [/Ⓩ/g, "log"],
  [/Ａ/g, "\\int_{0}^{t}"],
  [/Ｂ/g, "\\int"],
  [/Ｃ/g, "\\sum"],
  [/Ｄ/g, "\\prod"],
];

export const latinReplacements: Replacement[] = [
  [/(?<![A-Za-zΑ-ω])binomial(?![A-Za-zΑ-ω])/g, "Ｇ"],
  [/(?<![A-Za-zΑ-ω])floor(?![A-Za-zΑ-ω])/g, "Ｈ"],
  [/(?<![A-Za-zΑ-ω])ceiling(?![A-Za-zΑ-ω])/g, "Ｉ"],
  [/(?<![A-Za-zΑ-ω])round(?![A-Za-zΑ-ω])/g, "Ｊ"],
  [/(?<![A-Za-zΑ-ω])(gcd|gcf)(?![A-Za-zΑ-ω])/g, "Ｋ"],
  [/(?<![A-Za-zΑ-ω])lcm(?![A-Za-zΑ-ω])/g, "Ｌ"],
];

export const finalLatinReplacements: Replacement[] = [
  [/Ｅ/g, "\\operatorname{mod}"],
  [/Ｇ/g, "\\operatorname{nCr}"],
  [/Ｈ/g, "\\operatorname{floor}"],
  [/Ｉ/g, "\\operatorname{ceil}"],
  [/Ｊ/g, "\\operatorname{round}"],
  [/Ｋ/g, "\\operatorname{gcf}"],
  [/Ｌ/g, "\\operatorname{lcm}"],
  [/Ｍ(?!\^\{)/g, "\\frac{d}{dx}"],
];

export const greekReplacements: Replacement[] = [
  [/(?<![A-Za-zΑ-ω])alpha/g, "α"],
  [/(?<![A-Za-zΑ-ω])beta/g, "β"],
  [/(?<![A-Za-zΑ-ω])Gamma/g, "Γ"],
  [/(?<![A-Za-zΑ-ω])gamma/g, "γ"],
  [/(?<![A-Za-zΑ-ω])Delta/g, "Δ"],
  [/(?<![A-Za-zΑ-ω])delta/g, "δ"],
  [/(?<![A-Za-zΑ-ω])epsilon/g, "ε"],
  [/(?<![A-Za-zΑ-ω])zeta/g, "ζ"],
  [/(?<![A-Za-zΑ-ω])eta/g, "η"],
  [/(?<![A-Za-zΑ-ω])Theta/g, "Θ"],
  [/(?<![A-Za-zΑ-ω])theta/g, "θ"],
  [/(?<![A-Za-zΑ-ω])iota/g, "ι"],
  [/(?<![A-Za-zΑ-ω])kappa/g, "κ"],
  [/(?<![A-Za-zΑ-ω])Lambda/g, "Λ"],
  [/(?<![A-Za-zΑ-ω])lambda/g, "λ"],
  [/(?<![A-Za-zΑ-ω])mu/g, "μ"],
  [/(?<![A-Za-zΑ-ω])nu/g, "ν"],
  [/(?<![A-Za-zΑ-ω])Xi/g, "Ξ"],
  [/(?<![A-Za-zΑ-ω])xi/g, "ξ"],
  [/(?<![A-Za-zΑ-ω])Pi/g, "Π"],
  [/(?<![A-Za-zΑ-ω])pi/g, "π"],
  [/(?<![A-Za-zΑ-ω])rho/g, "ρ"],
  [/(?<![A-Za-zΑ-ω])Sigma/g, "Σ"],
  [/(?<![A-Za-zΑ-ω])sigma/g, "σ"],
  [/(?<![A-Za-zΑ-ω])tau/g, "τ"],
  [/(?<![A-Za-zΑ-ω])Upsilon/g, "Τ"],
  [/(?<![A-Za-zΑ-ω])upsilon/g, "υ"],
  [/(?<![A-Za-zΑ-ω])Phi/g, "Φ"],
  [/(?<![A-Za-zΑ-ω])phi/g, "φ"],
  [/(?<![A-Za-zΑ-ω])chi/g, "χ"],
  [/(?<![A-Za-zΑ-ω])Psi/g, "Ψ"],
  [/(?<![A-Za-zΑ-ω])psi/g, "ψ"],
  [/(?<![A-Za-zΑ-ω])Omega/g, "Ω"],
  [/(?<![A-Za-zΑ-ω])omega/g, "ω"],
  [/(?<![A-Za-zΑ-ω])constant/g, "C"],
];

export const greekFinalReplacements: Replacement[] = [
  [/α/g, "\\alpha"],
  [/β/g, "\\beta"],
  [/Γ/g, "\\Gamma"],
  [/γ/g, "\\gamma"],
  [/Δ/g, "\\Delta"],
  [/δ/g, "\\delta"],
  [/ε/g, "\\epsilon"],
  [/ζ/g, "\\zeta"],
  [/η/g, "\\eta"],
  [/Θ/g, "\\Theta"],
  [/θ/g, "\\theta"],
  [/ι/g, "\\iota"],
  [/κ/g, "\\kappa"],
  [/Λ/g, "\\Lambda"],
  [/λ/g, "\\lambda"],
  [/μ/g, "\\mu"],
  [/ν/g, "\\nu"],
  [/Ξ/g, "\\Xi"],
  [/ξ/g, "\\xi"],
  [/Π/g, "\\Pi"],
  [/π/g, "\\pi"],
  [/ρ/g, "\\rho"],
  [/Σ/g, "\\Sigma"],
  [/σ/g, "\\sigma"],
  [/τ/g, "\\tau"],
  [/Τ/g, "\\Upsilon"],
  [/υ/g, "\\upsilon"],
  [/Φ/g, "\\Phi"],
  [/φ/g, "\\phi"],
  [/χ/g, "\\chi"],
  [/Ψ/g, "\\Psi"],
  [/ψ/g, "\\psi"],
  [/Ω/g, "\\Omega"],
  [/ω/g, "\\omega"],
  [/polygamma/g, "\\psi_{poly}"],
];

export const bracketFinalReplacements: Replacement[] = [
  [/\(/g, "\\left("],
  [/\)/g, "\\right)"],
  [/«/g, "\\left|"],
  [/»/g, "\\right|"],
  [/〔/g, "\\left\\{"],
  [/〕/g, "\\right\\}"],
  [/\[/g, "\\left["],
  [/\]/g, "\\right]"],
];
